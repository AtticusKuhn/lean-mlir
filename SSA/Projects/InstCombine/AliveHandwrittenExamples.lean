
import SSA.Projects.InstCombine.LLVM.EDSL
import SSA.Projects.InstCombine.AliveStatements
import SSA.Projects.InstCombine.Refinement
import SSA.Projects.InstCombine.Tactic

open MLIR AST
open Std (BitVec)
open Ctxt (Var)

namespace AliveAutoGenerated
set_option pp.proofs false
set_option pp.proofs.withType false




def simplifyDivRemOfSelect (w : Nat) :
[mlir_icom ( w )| {
^bb0(%X : _, %C : _):
  %v1 = "llvm.shl" (%X,%C) : (_, _) -> (_)
  %v2 = "llvm.mlir.constant" () { value = -1 : _ } :() -> (_)
  %v3 = "llvm.lshr" (%v2,%C) : (_, _) -> (_)
  %v4 = "llvm.and" (%X,%v3) : (_, _) -> (_)
  "llvm.return" (%v4) : (_) -> ()
}] âŠ‘ [mlir_icom ( w )| {
^bb0(%X : _, %C : _):
  %v1 = "llvm.shl" (%X,%C) : (_, _) -> (_)
  %v2 = "llvm.mlir.constant" () { value = -1 : _ } :() -> (_)
  %v3 = "llvm.lshr" (%v2,%C) : (_, _) -> (_)
  %v4 = "llvm.and" (%X,%v3) : (_, _) -> (_)
  "llvm.return" (%v4) : (_) -> ()
}] := by simp_alive_peephole
